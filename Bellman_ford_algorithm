#include<iostream>
#include<bits/stdc++.h>
#include<fstream>
using namespace std;
struct node{
	int u;
	int v;
	int wt;
//	node(int a,int b,int weight)
//	{
//		u=a;
//		v=b;
//		wt=weight;
//	}
};

int main()
{
	fstream infile;
	infile.open("C:\\Users\\sudin jana\\Desktop\\data structure and algorithm\\graph\\Bellman_ford_algo.txt",ios::in);
	int n,m;
	if (!infile)
       {
        cout << "Error to open the file";
        return 1;
        }
	cout<<"Enter the total number of vertices and edges of the graph"<<"\n";
	infile>>n;
	infile>>m;
	node edges[m];
	int u,v,wt,i,j;
	for(i=0;i<m;i++)
	{
		infile>>u;
		infile>>v;
		infile>>wt;
		edges[i].u=u;
		edges[i].v=v;
		edges[i].wt=wt;
	}
	int src;
	infile>>src;
	
	int dist[n];
	
	for(i=0;i<n;i++)
	dist[i]=INT_MAX;
	
	dist[src]=0;
	
	for(i=1;i<=(n-1);i++)
	{
		for(j=0;j<m;j++)
		{
			if(dist[edges[j].u]!=INT_MAX && dist[edges[j].u]+edges[j].wt<dist[edges[j].v])
			{
				dist[edges[j].v]=dist[edges[j].u]+edges[j].wt;
			}
		}
	}
	    int flag=1;
	    for(j=0;j<m;j++)
		{
			if(dist[edges[j].u]+edges[j].wt<dist[edges[j].v])
			{
				cout<<"Negative cycle"<<"\n";
				flag=0;
				break;
				return 0;
			}
		}
		if(flag==1)
		{
		    for(i=0;i<n;i++)
			{
				cout<<dist[i]<<" ";
			}	
		}
}
